import{_ as a,c as e,o as s,aQ as t}from"./chunks/framework.B290bXAl.js";const r="/assets/fiddler-icon.csOKIcNA.png",i="/assets/fiddler-01.6GEr3bQY.png",n="/assets/fiddler-02.BN6KVFYK.png",l="/assets/fiddler-03.BSy2-znf.png",d="/assets/fiddler-04.ucHBDSLa.png",o="/assets/fiddler-05.B2Ah5Wps.png",c="/assets/fiddler-06.MLwWc078.png",h="/assets/fiddler-07.CalaFrhQ.png",v=JSON.parse('{"title":"02-fiddler的基本使用","description":"","frontmatter":{},"headers":[],"relativePath":"note/efficiency/fiddler/02-fiddler的基本使用.md","filePath":"note/efficiency/fiddler/02-fiddler的基本使用.md","lastUpdated":1713698404000}'),p={name:"note/efficiency/fiddler/02-fiddler的基本使用.md"},_=t('<h1 id="_02-fiddler的基本使用" tabindex="-1">02-fiddler的基本使用 <a class="header-anchor" href="#_02-fiddler的基本使用" aria-label="Permalink to &quot;02-fiddler的基本使用&quot;">​</a></h1><p>推荐博客：<a href="https://www.cnblogs.com/GeekerJun/p/16259224.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/GeekerJun/p/16259224.html</a></p><h2 id="图标" tabindex="-1">图标 <a class="header-anchor" href="#图标" aria-label="Permalink to &quot;图标&quot;">​</a></h2><p><img src="'+r+'" alt=""></p><h2 id="过滤" tabindex="-1">过滤 <a class="header-anchor" href="#过滤" aria-label="Permalink to &quot;过滤&quot;">​</a></h2><h3 id="过滤指定网站" tabindex="-1">过滤指定网站 <a class="header-anchor" href="#过滤指定网站" aria-label="Permalink to &quot;过滤指定网站&quot;">​</a></h3><p><img src="'+i+'" alt=""></p><h3 id="过滤非200状态码" tabindex="-1">过滤非200状态码 <a class="header-anchor" href="#过滤非200状态码" aria-label="Permalink to &quot;过滤非200状态码&quot;">​</a></h3><p><img src="'+n+'" alt=""></p><h3 id="隐藏tunnel请求" tabindex="-1">隐藏Tunnel请求 <a class="header-anchor" href="#隐藏tunnel请求" aria-label="Permalink to &quot;隐藏Tunnel请求&quot;">​</a></h3><p><img src="'+l+'" alt=""></p><h3 id="隐藏js-css等静态资源" tabindex="-1">隐藏js，css等静态资源 <a class="header-anchor" href="#隐藏js-css等静态资源" aria-label="Permalink to &quot;隐藏js，css等静态资源&quot;">​</a></h3><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>REGEX:.*\\.(js|css)(\\?.*)?$</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+d+'" alt=""></p><h2 id="卡包" tabindex="-1">卡包 <a class="header-anchor" href="#卡包" aria-label="Permalink to &quot;卡包&quot;">​</a></h2><p>就是说一个请求，打个断点，然后复制100份，然后再统一发出。</p><h3 id="打断点" tabindex="-1">打断点 <a class="header-anchor" href="#打断点" aria-label="Permalink to &quot;打断点&quot;">​</a></h3><p><img src="'+o+'" alt=""></p><h3 id="设置卡包的次数" tabindex="-1">设置卡包的次数 <a class="header-anchor" href="#设置卡包的次数" aria-label="Permalink to &quot;设置卡包的次数&quot;">​</a></h3><p><img src="'+c+'" alt=""></p><h3 id="执行" tabindex="-1">执行 <a class="header-anchor" href="#执行" aria-label="Permalink to &quot;执行&quot;">​</a></h3><p><img src="'+h+'" alt=""></p>',22),f=[_];function m(u,b,g,q,k,x){return s(),e("div",null,f)}const w=a(p,[["render",m]]);export{v as __pageData,w as default};
