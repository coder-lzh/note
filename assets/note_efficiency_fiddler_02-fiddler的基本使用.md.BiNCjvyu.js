import{_ as s,c as a,o as e,aR as i}from"./chunks/framework.BX4QjseR.js";const n="/assets/fiddler-icon.csOKIcNA.png",t="/assets/fiddler-01.6GEr3bQY.png",l="/assets/fiddler-02.BN6KVFYK.png",r="/assets/fiddler-03.BSy2-znf.png",p="/assets/fiddler-04.ucHBDSLa.png",o="/assets/fiddler-05.B2Ah5Wps.png",d="/assets/fiddler-06.MLwWc078.png",h="/assets/fiddler-07.CalaFrhQ.png",c="/assets/fiddler-08.BW72xxPR.png",u="/assets/fiddler-09.CiEbAygR.png",A=JSON.parse('{"title":"02-fiddler的基本使用","description":"","frontmatter":{},"headers":[],"relativePath":"note/efficiency/fiddler/02-fiddler的基本使用.md","filePath":"note/efficiency/fiddler/02-fiddler的基本使用.md","lastUpdated":1716710948000}'),k={name:"note/efficiency/fiddler/02-fiddler的基本使用.md"},b=i('<h1 id="_02-fiddler的基本使用" tabindex="-1">02-fiddler的基本使用 <a class="header-anchor" href="#_02-fiddler的基本使用" aria-label="Permalink to &quot;02-fiddler的基本使用&quot;">​</a></h1><p>推荐博客：<a href="https://www.cnblogs.com/GeekerJun/p/16259224.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/GeekerJun/p/16259224.html</a></p><h2 id="图标" tabindex="-1">图标 <a class="header-anchor" href="#图标" aria-label="Permalink to &quot;图标&quot;">​</a></h2><p><img src="'+n+'" alt=""></p><h2 id="过滤" tabindex="-1">过滤 <a class="header-anchor" href="#过滤" aria-label="Permalink to &quot;过滤&quot;">​</a></h2><h3 id="过滤指定网站" tabindex="-1">过滤指定网站 <a class="header-anchor" href="#过滤指定网站" aria-label="Permalink to &quot;过滤指定网站&quot;">​</a></h3><p><img src="'+t+'" alt=""></p><h3 id="过滤非200状态码" tabindex="-1">过滤非200状态码 <a class="header-anchor" href="#过滤非200状态码" aria-label="Permalink to &quot;过滤非200状态码&quot;">​</a></h3><p><img src="'+l+'" alt=""></p><h3 id="隐藏tunnel请求" tabindex="-1">隐藏Tunnel请求 <a class="header-anchor" href="#隐藏tunnel请求" aria-label="Permalink to &quot;隐藏Tunnel请求&quot;">​</a></h3><p><img src="'+r+'" alt=""></p><h3 id="隐藏js-css等静态资源" tabindex="-1">隐藏js，css等静态资源 <a class="header-anchor" href="#隐藏js-css等静态资源" aria-label="Permalink to &quot;隐藏js，css等静态资源&quot;">​</a></h3><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>REGEX:.*\\.(js|css)(\\?.*)?$</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+p+'" alt=""></p><h2 id="删除记录" tabindex="-1">删除记录 <a class="header-anchor" href="#删除记录" aria-label="Permalink to &quot;删除记录&quot;">​</a></h2><p>选中然后delete删除单个</p><blockquote><p>比如你在会话列表中选择了某几个会话想保留，其他会话全部删除</p><p>这种操作可以先按住ctrl然后选择要保留的会话，然后再按下shift+delete即可!</p></blockquote><h2 id="卡包" tabindex="-1">卡包 <a class="header-anchor" href="#卡包" aria-label="Permalink to &quot;卡包&quot;">​</a></h2><p>就是说一个请求，打个断点，然后复制100份，然后再统一发出。</p><blockquote><p>这种操作可以对一些普通的基础服务器做一个压力测试, 也就相当于一个简单并发测试</p></blockquote><h3 id="打断点" tabindex="-1">打断点 <a class="header-anchor" href="#打断点" aria-label="Permalink to &quot;打断点&quot;">​</a></h3><p><img src="'+o+'" alt=""></p><h3 id="设置卡包的次数" tabindex="-1">设置卡包的次数 <a class="header-anchor" href="#设置卡包的次数" aria-label="Permalink to &quot;设置卡包的次数&quot;">​</a></h3><p>快捷键<code>shift+R</code><img src="'+d+'" alt=""></p><h3 id="执行" tabindex="-1">执行 <a class="header-anchor" href="#执行" aria-label="Permalink to &quot;执行&quot;">​</a></h3><p><img src="'+h+'" alt=""></p><h2 id="自定义请求头" tabindex="-1">自定义请求头 <a class="header-anchor" href="#自定义请求头" aria-label="Permalink to &quot;自定义请求头&quot;">​</a></h2><p><img src="'+c+`" alt=""></p><blockquote><p>FiddlerScript是一种基于JScript .NET的简单脚本语言</p><p>Fiddler规则中所有操作都在Handlers类中定义完成，其默认已有很多变量和函数，其中最常用的函数主要有两个：OnBeforeRequest和OnBeforeResponse</p></blockquote><p>如果是你需要设置多个请求头，则需要写脚本实现</p><p>在Fiddler主界面，选择“Rules”菜单，然后选择“Customize Rules...”。</p><p>全局搜索 <code>function OnBeforeRequest</code>,添加以下代码，保存即可</p><div class="language-c# vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用FiddlerScript添加自定义请求头</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnBeforeRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(oSession) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 添加一个自定义请求头 &quot;X-Custom-Header&quot;，值为 &quot;CustomValue&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    oSession.oRequest.headers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;X-Custom-Header&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CustomValue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 如果您需要添加多个自定义请求头，可以重复调用 Add 方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 例如，添加另一个请求头 &quot;X-Another-Header&quot;，值为 &quot;AnotherValue&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    oSession.oRequest.headers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;X-Another-Header&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;AnotherValue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="`+u+'" alt=""></p>',34),m=[b];function f(g,_,q,E,y,F){return e(),a("div",null,m)}const C=s(k,[["render",f]]);export{A as __pageData,C as default};
